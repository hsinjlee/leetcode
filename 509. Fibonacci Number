/*
509. Fibonacci Number
Easy

The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, 
such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,

F(0) = 0,   F(1) = 1
F(N) = F(N - 1) + F(N - 2), for N > 1.
Given N, calculate F(N).

 Example 1:

Input: 2
Output: 1
Explanation: F(2) = F(1) + F(0) = 1 + 0 = 1.

Example 2:

Input: 3
Output: 2
Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.

Example 3:

Input: 4
Output: 3
Explanation: F(4) = F(3) + F(2) = 2 + 1 = 3.
 

Note:

0 ≤ N ≤ 30.
*/

//Time:O(n)
//Space: O(n)

class Solution1 {
    public int fib(int N) {
        if (N < 2){
            return N;
        }
        int [] fibNum = new int [N+1];
        fibNum[1] = 1;
        for (int i = 2; i <= N; i++){
            fibNum[i] = fibNum[i -1] + fibNum[i-2];
        }
        return fibNum[N];
    }
}

//Time:O(n)
//Space: O(n)

class Solution2 {
    public int fib(int N) {
        List<Integer> list = new ArrayList();
        list.add(0);
        list.add(1);
        for (int i = 2; i <= N; i++){
            list.add(list.get(i-2) + list.get(i-1));
        }
        return list.get(N);
    }
}

//Time:O(n)
//Space: O(1)

class Solution {
    public int fib(int N) {
        if (N < 2){
            return N;
        }
        int a = 0;
        int b = 1;
        while(N-- > 1){
            int sum = a + b;
            a = b;
            b = sum;
        }
        return b;
    }
}
