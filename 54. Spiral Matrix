54. Spiral Matrix
Medium


Given an m x n matrix, return all elements of the matrix in spiral order.

 

Example 1:


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]
Example 2:


Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]
 

Constraints:

m == matrix.length
n == matrix[i].length
1 <= m, n <= 10
-100 <= matrix[i][j] <= 100

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        if (matrix.length == 0 || matrix[0].length == 0 || matrix == null){
            return new ArrayList();
        }
        List<Integer> res = new ArrayList();
        int m = matrix.length;
        int n = matrix[0].length;
        int top = 0;
        int down = m - 1;
        int left = 0;
        int right = n - 1;
        
        while(res.size() < m * n){
            for (int i = left; i <= right && res.size() < m * n; i++){
                res.add(matrix[top][i]);
            }
            top++;
            for (int i = top; i <= down  && res.size() < m * n; i++){
                res.add(matrix[i][right]);
            }
            right--;
            for (int i = right; i >= left  && res.size() < m * n; i--){
                res.add(matrix[down][i]);
            }
            down--;
            for (int i = down; i >= top  && res.size() < m * n; i--){
                res.add(matrix[i][left]);
            }
            left++;
        }
        return res;
    }
}
