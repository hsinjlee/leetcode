/*
1200. Minimum Absolute Difference
Easy

Given an array of distinct integers arr, find all pairs of elements with the minimum absolute difference of any two elements. 

Return a list of pairs in ascending order(with respect to pairs), each pair [a, b] follows

a, b are from arr
a < b
b - a equals to the minimum absolute difference of any two elements in arr
 

Example 1:

Input: arr = [4,2,1,3]
Output: [[1,2],[2,3],[3,4]]
Explanation: The minimum absolute difference is 1. List all pairs with difference equal to 1 in ascending order.

Example 2:

Input: arr = [1,3,6,10,15]
Output: [[1,3]]

Example 3:

Input: arr = [3,8,-10,23,19,-4,-14,27]
Output: [[-14,-10],[19,23],[23,27]]
 

Constraints:

2 <= arr.length <= 10^5
-10^6 <= arr[i] <= 10^6
*/

//Time complexity: O(N log N)
//Space complexity: O(1)
class Solution1 {
    public List<List<Integer>> minimumAbsDifference(int[] arr) {
        List<List<Integer>> result = new ArrayList();
        Arrays.sort(arr);
        int currentMinDiff = arr[1] - arr[0];
        result.add(Arrays.asList(arr[0],arr[1]));
        for (int i = 2; i < arr.length; i++){
            int diff = arr[i] - arr[i-1];
            if(currentMinDiff == diff){
                result.add(Arrays.asList(arr[i-1], arr[i]));
            } else if (currentMinDiff > diff){
                currentMinDiff = diff;
                result = new ArrayList();
                result.add(Arrays.asList(arr[i-1], arr[i]));
            }
        }
        return result;
    }
}

class Solution2 {
    public List<List<Integer>> minimumAbsDifference(int[] arr) {
        List<List<Integer>> result = new ArrayList();
        Arrays.sort(arr);
        int minCurrentDiff = arr[1] - arr[0];
        for (int i = 1; i < arr.length; i++){
            int diff = arr[i] - arr[i-1];
            if (minCurrentDiff == diff){
                result.add(Arrays.asList(arr[i-1],arr[i]));
            } else if (minCurrentDiff > diff){
                minCurrentDiff = diff;
                result = new ArrayList();
                result.add(Arrays.asList(arr[i-1],arr[i]));
            }
        }
        return result;
    }
}
